'use strict'

/**
 * ## Plugin structure
 * This is the main entry point of our [custom ESLint plugin](https://eslint.org/docs/developer-guide/working-with-plugins),
 * which exposes sets of [rules]() along with their [severity configurations]() to the [ESLint Cli]() or [API]().
 * @module
 */
/**
 * Custom ESLint plugin:
 * https://eslint.org/docs/developer-guide/working-with-plugins
 * This file exposes our plugins' ESLint configuration, which must:
 * - Expose any 'configs' for prescribed rule configuration bundles
 *     (i.e. "recommended"). See shareable configs:
 *     https://eslint.org/docs/developer-guide/shareable-configs
 * - Expose any 'rules' for use in ESLint
 */

const path = require('node:path')

const api = require('./api')
const getConfigs = require('./conf')
const rules = Object.assign(
  {},
  ...Object.entries(require('./rules')).map(([k, v]) => ({ [k]: v() }))
)

const packageJson = require(path.join(__dirname, '../package.json'))

const plugin = {
  meta: {
    name: packageJson.name,
    version: packageJson.version
  },
  configs: {},
  rules,
  ...api
}

// Assign configs here so we can reference `plugin`
Object.assign(plugin.configs, getConfigs(plugin))

// Use commonJS entry point to ensure backwards compatibility (<eslint@v9):
// https://eslint.org/docs/latest/extend/plugin-migration-flat-config#backwards-compatibility
module.exports = plugin
