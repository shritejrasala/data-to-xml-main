'use strict'

const path = require('node:path')
const { FILES, GLOBALS, PLUGIN_NAME } = require('../constants')
const { parserPath } = require('../api')

/**
 * @param {object} plugin Plugin implementation used for new configuration layout.
 * @param {string} configName
 * @param {boolean} [isLegacy]
 */
function _createConfig (plugin, configName, isLegacy = false) {
  const config = require(path.join(__dirname, configName))
  if (isLegacy) {
    return {
      root: true,
      globals: GLOBALS,
      plugins: [PLUGIN_NAME],
      overrides: [
        {
          files: FILES,
          parser: parserPath
        }
      ],
      rules: config
    }
  }
  return {
    name: `@sap/cds/${configName}`,
    languageOptions: {
      globals: GLOBALS,
      parser: require(parserPath)
    },
    plugins: {
      '@sap/cds': plugin
    },
    files: FILES.map(file => file.replace('*.', '**/*.')),
    rules: config
  }
}

// Export both eslintrc and flat configs to ensure backwards compatibility (<eslint@v9):
// https://eslint.org/docs/latest/extend/plugin-migration-flat-config#backwards-compatibility
module.exports = function (plugin) {
  return {
    all: _createConfig(plugin, 'all'),
    recommended: _createConfig(plugin, 'recommended'),
    experimental: _createConfig(plugin, 'experimental'),
    // Legacy configs (for backwards compatibility)
    'all-legacy': _createConfig(plugin, 'all', true),
    'recommended-legacy': _createConfig(plugin, 'recommended', true)
  }
}
