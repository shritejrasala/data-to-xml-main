'use strict'

module.exports = {
  meta: {
    schema: [{/* to avoid deprecation warning for ESLint 9 */ }],
    docs: {
      description: '`@restrict.grant` on service level and for bound/unbound actions and functions is limited to grant: \'*\'',
      category: 'Model Validation',
      recommended: true,
      url: 'https://cap.cloud.sap/docs/tools/cds-lint/meta/auth-restrict-grant-service',
    },
    messages: {
      limitedGrant: `The grant value provided in @restrict is limited to '*' for {{kind}} '{{name}}'`,
    },
    type: 'problem',
    model: 'inferred'
  },
  create (context) {
    return {
      action: checkRestrictGrant,
      function: checkRestrictGrant,
      service: checkRestrictGrant
    }

    function checkRestrictGrant (d) {
      const node = context.getNode(d)
      const file = d.$location.file
      if (d['@restrict']) {
        for (const entry of d['@restrict']) {
          if (Object.keys(entry).includes('grant')) {
            const grantValue = entry.grant
            const messageId = 'limitedGrant'
            const data = { kind: d.kind, name: d.name }
            switch (typeof grantValue) {
            case 'string':
              if (grantValue !== '*') {
                context.report({ messageId, data, node, file })
              }
              break
            case 'object':
              if (grantValue.length > 1 || grantValue[0] !== '*') {
                context.report({ messageId, data, node, file })
              }
              break
            }
          }
        }
      }
    }
  }
}
